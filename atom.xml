<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>若水</title>
  
  
  <link href="http://ruoshui66.github.io/atom.xml" rel="self"/>
  
  <link href="http://ruoshui66.github.io/"/>
  <updated>2021-12-13T05:17:09.324Z</updated>
  <id>http://ruoshui66.github.io/</id>
  
  <author>
    <name>RoWater</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>LCX的算法笔记Week-1</title>
    <link href="http://ruoshui66.github.io/2021/12/13/algotithm1/"/>
    <id>http://ruoshui66.github.io/2021/12/13/algotithm1/</id>
    <published>2021-12-13T04:59:03.000Z</published>
    <updated>2021-12-13T05:17:09.324Z</updated>
    
    <content type="html"><![CDATA[<h1 id="LCX的算法笔记Week-1"><a href="#LCX的算法笔记Week-1" class="headerlink" title="LCX的算法笔记Week-1"></a>LCX的算法笔记Week-1</h1><p>详细记录一下一周里做的比较有意思的几道题</p><h2 id="一"><a href="#一" class="headerlink" title="一"></a>一</h2><h4 id="题目来源：字节跳动网络赛"><a href="#题目来源：字节跳动网络赛" class="headerlink" title="题目来源：字节跳动网络赛"></a>题目来源：字节跳动网络赛</h4><p><img src="https://tva1.sinaimg.cn/large/008i3skNgy1gxb85kjnpej30y50u077o.jpg"></p><p>因为少写了个括号导致WA啦😩😩😩，以为是算法有问题，就让队友写并查集解法啦。导致浪费了太多时间。又间接导致了下面要说的题没时间加特判了，寄。看来还是要多加练习。这道题除了特判比较繁琐，其他的还行。很容易就能想到要想使交换的次数最少，只需要先将给定的无序序列排列成有序序列，然后从第一个数字往后遍历，遍历的过程中，若当前有序序列中数字所在的位置和之前不同，则交换一次，并把记录的交换次数加1。比如样例1的输入 2 4 5 1 3 ，先排成1 2 3 4 5。遍历当前有序序列，发现1原本在下标4的位置，这时候就把下标4位置上的数1和下标1上的数2交换，依次类推，可算出总共交换了3次。样例1的k为0，所以没有预先交换的操作，最大值最小值相等，即3。所以就需要记录下之前无序序列每个数的下标，因为数的值可能会到10的九次方，如果用数组来维护这一信息，肯定会爆掉，且全局变量的数组也最多开到十的六次方的级别，所以用哈希表来存储，通过数据直接访问下标。再多开个数组记下原本的无序序列。所以很容易就能求得最小次数啦。关键在于最大次数的讨论，想要后面换的次数最多，就要使序列越无序越好，最无序的状态就是要n-1次交换才能变有序。假设n个数的无序序列，需要cnt次交换使序列变得有序，那么就需要（n-1）-cnt次使它最无序，这是我在比赛的时候提出的一个假设，当时自己写了几个序列，发现确实是这样的，后面队友写的并查集的解法也从侧面证明了这一点。完整代码如下</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">1e5</span>+<span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> n,k;</span><br><span class="line"><span class="keyword">int</span> a[N],b[N];</span><br><span class="line">unordered_map&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; dic;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="number">0</span>),cout.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    cin&gt;&gt;n&gt;&gt;k;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++) &#123;</span><br><span class="line">        cin&gt;&gt;a[i];</span><br><span class="line">        dic[a[i]]=i;</span><br><span class="line">        b[i]=a[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">sort</span>(a+<span class="number">1</span>,a+<span class="number">1</span>+n);</span><br><span class="line">    <span class="keyword">int</span> cnt=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (dic[a[i]]!=i) &#123;</span><br><span class="line"><span class="comment">//            cout&lt;&lt;dic[a[i]]&lt;&lt;&#x27; &#x27;&lt;&lt;i&lt;&lt;endl;</span></span><br><span class="line">            <span class="keyword">int</span> temp=dic[a[i]];</span><br><span class="line">            dic[a[i]]=i;</span><br><span class="line">            dic[b[i]]=temp;</span><br><span class="line">            <span class="keyword">int</span> temp2=b[i];</span><br><span class="line">            b[i]=b[temp];</span><br><span class="line">            b[temp]=temp2;</span><br><span class="line">            cnt++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> uncnt=n<span class="number">-1</span>-cnt;</span><br><span class="line">    <span class="keyword">int</span> max=<span class="number">0</span>,min=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span> (k&gt;=cnt) &#123;</span><br><span class="line">        <span class="keyword">if</span> ((k-cnt)%<span class="number">2</span>==<span class="number">0</span>) &#123;</span><br><span class="line">            min=<span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> min=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> min=cnt-k;</span><br><span class="line">    <span class="keyword">if</span> (k&gt;=uncnt) &#123;</span><br><span class="line">        <span class="keyword">if</span> ((k-uncnt)%<span class="number">2</span>==<span class="number">0</span>) &#123;</span><br><span class="line">            max=n<span class="number">-1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> max=n<span class="number">-2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> max=n<span class="number">-1</span>-(uncnt-k);</span><br><span class="line">    cout&lt;&lt;min&lt;&lt;<span class="string">&#x27; &#x27;</span>&lt;&lt;max;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="队友的并查集解法"><a href="#队友的并查集解法" class="headerlink" title="队友的并查集解法"></a>队友的并查集解法</h5><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">1e5</span>+<span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> n,k;</span><br><span class="line"><span class="keyword">int</span> a[N],b[N];</span><br><span class="line"><span class="keyword">int</span> p[N], si[N];</span><br><span class="line"><span class="keyword">bool</span> st[N];</span><br><span class="line"><span class="keyword">int</span> cnt,num;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (p[x] != x) p[x] = <span class="built_in">find</span>(p[x]);</span><br><span class="line">        <span class="keyword">return</span> p[x];</span><br><span class="line">    &#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">un</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> aa=<span class="built_in">find</span>(a);</span><br><span class="line">    <span class="keyword">int</span> bb=<span class="built_in">find</span>(b);</span><br><span class="line">    <span class="keyword">if</span>(aa!=bb)&#123;</span><br><span class="line">        p[aa]=bb;</span><br><span class="line">        si[bb]+=si[aa];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    </span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    cout.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    cin&gt;&gt;n&gt;&gt;k;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        cin&gt;&gt;a[i];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i ++ )</span><br><span class="line">        &#123;</span><br><span class="line">            p[i] = i;</span><br><span class="line">            si[i] = <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;n;i++)&#123;</span><br><span class="line">        <span class="built_in">un</span>(i,a[i]);</span><br><span class="line">    &#125;</span><br><span class="line">   </span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(!st[<span class="built_in">find</span>(i)])&#123;</span><br><span class="line">            cnt+=si[<span class="built_in">find</span>(i)]<span class="number">-1</span>;</span><br><span class="line">            st[<span class="built_in">find</span>(i)]=<span class="number">1</span>;</span><br><span class="line">            num++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>(k&lt;=cnt) cout&lt;&lt;cnt-k&lt;&lt;<span class="string">&#x27; &#x27;</span>;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>((k-cnt)%<span class="number">2</span>) cout&lt;&lt;<span class="number">1</span>&lt;&lt;<span class="string">&#x27; &#x27;</span>;</span><br><span class="line">        <span class="keyword">else</span> cout&lt;&lt;<span class="number">0</span>&lt;&lt;<span class="string">&#x27; &#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(k&lt;num) cout&lt;&lt;cnt+k;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>((k-num)%<span class="number">2</span>) cout&lt;&lt;n<span class="number">-1</span>;</span><br><span class="line">        <span class="keyword">else</span> cout&lt;&lt;n<span class="number">-2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;endl&lt;&lt;num&lt;&lt;<span class="string">&#x27; &#x27;</span>&lt;&lt;cnt;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="二"><a href="#二" class="headerlink" title="二"></a>二</h2><h4 id="题目来源：字节跳动网络赛-1"><a href="#题目来源：字节跳动网络赛-1" class="headerlink" title="题目来源：字节跳动网络赛"></a>题目来源：字节跳动网络赛</h4><p><img src="https://tva1.sinaimg.cn/large/008i3skNgy1gxb86l2cb6j30u00wfjvq.jpg"></p><p>这道题本来是开局队友在看的，后来他们感觉太繁琐了，就放弃了。我在后期就又去看了看这道题，想到了怎么写，不过也非常繁琐，怒敲一百多行代码，敲那么多也敲出了一些bug，自增写成了自减，又是一个寄。等到bug找出来之后，样例都过了，就直接进行一个代码的提交，然后就WA啦。此时距离结束已经就剩两分钟，想了一会发现是对非法情况的特判不够全面，想出来之后也没时间提交了。希望有生之年能在算法竞赛上完成一次压哨绝杀。题意就是让输出n个数字的序列，数的值1-n里随意排列。且该序列的极大值点和极小值点满足题目的要求，对于极大值数量大于极小值数量的，可以先取出1和2作为两个端点，然后将n作为第一个极大值点，n-1作为第二个极大值点，直到满足数量要求，同样的，3作为第一个极小值，4作为第二个，以此类推，最后把没有用到的数全部放在1-n之间输出。输出的时候注意顺序即可。对于极大值数量小于极小值数量的，思想类似，反着来就行了。极大值极小值数量相等的，只要让第一个数为1然后递增递减依次交错进行就行啦，同样把没有用的数在第一个序列上坡（即1-n这一段）输出来，就一定能满足题目要求啦。代码实现如下</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">1e5</span>+<span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> ma[N],mn[N],state[N];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> t;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    cout.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    cin&gt;&gt;t;</span><br><span class="line">    <span class="keyword">while</span> (t--) &#123;</span><br><span class="line">        <span class="keyword">int</span> n;</span><br><span class="line">        cin&gt;&gt;n;</span><br><span class="line">        <span class="built_in">memset</span>(ma, <span class="number">0</span>, <span class="keyword">sizeof</span> ma);</span><br><span class="line">        <span class="built_in">memset</span>(mn, <span class="number">0</span>, <span class="keyword">sizeof</span> mn);</span><br><span class="line">        <span class="built_in">memset</span>(state, <span class="number">0</span>, <span class="keyword">sizeof</span> state);</span><br><span class="line">        <span class="keyword">int</span> a,b;</span><br><span class="line">        cin&gt;&gt;a&gt;&gt;b;</span><br><span class="line">        <span class="keyword">if</span> (n%<span class="number">2</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span>((a-b&gt;<span class="number">1</span>)||(a+b&gt;n<span class="number">-2</span>||a&gt;n/<span class="number">2</span>||b&gt;n/<span class="number">2</span>)||(b-a)&gt;<span class="number">1</span>) &#123;cout&lt;&lt;<span class="number">-1</span>&lt;&lt;endl;<span class="keyword">continue</span>;&#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> ((a+b&gt;n<span class="number">-2</span>||a&gt;n/<span class="number">2</span><span class="number">-1</span>||b&gt;n/<span class="number">2</span><span class="number">-1</span>)||a-b&gt;<span class="number">1</span>||(b-a)&gt;<span class="number">1</span>) &#123;</span><br><span class="line">                cout&lt;&lt;<span class="number">-1</span>&lt;&lt;endl;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">             <span class="keyword">if</span> (a&gt;b) &#123;</span><br><span class="line">                    <span class="keyword">int</span> temp=n;</span><br><span class="line">                    state[<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line">                    state[<span class="number">2</span>]=<span class="number">1</span>;</span><br><span class="line">                    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;a; i++) &#123;</span><br><span class="line">                        ma[i]=temp;</span><br><span class="line">                        state[temp--]=<span class="number">1</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">int</span> temp2=<span class="number">3</span>;</span><br><span class="line">                    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;b; i++) &#123;</span><br><span class="line"></span><br><span class="line">                        mn[i]=temp2;</span><br><span class="line">                        state[temp2++]=<span class="number">1</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    cout&lt;&lt;<span class="number">1</span>&lt;&lt;<span class="string">&#x27; &#x27;</span>;</span><br><span class="line">                    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">3</span>; i&lt;=n; i++) &#123;</span><br><span class="line">                        <span class="keyword">if</span> (!state[i]) &#123;</span><br><span class="line">                            cout&lt;&lt;i&lt;&lt;<span class="string">&#x27; &#x27;</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;a; i++) &#123;</span><br><span class="line">                        cout&lt;&lt;ma[i]&lt;&lt;<span class="string">&#x27; &#x27;</span>;</span><br><span class="line">                        <span class="keyword">if</span> (i&lt;b) &#123;</span><br><span class="line">                            cout&lt;&lt;mn[i]&lt;&lt;<span class="string">&#x27; &#x27;</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                    cout&lt;&lt;<span class="number">2</span>&lt;&lt;endl;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span> (a&lt;b) &#123;</span><br><span class="line">                    state[n]=<span class="number">1</span>;</span><br><span class="line">                    <span class="keyword">int</span> k=n<span class="number">-1</span>;</span><br><span class="line">                    state[k]=<span class="number">1</span>;</span><br><span class="line">                    <span class="keyword">int</span> temp2=<span class="number">1</span>;</span><br><span class="line">                    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;b; i++) &#123;</span><br><span class="line">                       </span><br><span class="line">                        mn[i]=temp2;</span><br><span class="line">                        state[temp2++]=<span class="number">1</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">int</span> temp=n<span class="number">-2</span>;</span><br><span class="line">                    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;a; i++) &#123;</span><br><span class="line">                    </span><br><span class="line">                        ma[i]=temp;</span><br><span class="line">                        state[temp--]=<span class="number">1</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    cout&lt;&lt;n&lt;&lt;<span class="string">&#x27; &#x27;</span>;</span><br><span class="line">                    <span class="keyword">for</span> (<span class="keyword">int</span> i=n<span class="number">-1</span>; i&gt;=<span class="number">1</span>; i--) &#123;</span><br><span class="line">                        <span class="keyword">if</span> (!state[i]) &#123;</span><br><span class="line">                            cout&lt;&lt;i&lt;&lt;<span class="string">&#x27; &#x27;</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;b; i++) &#123;</span><br><span class="line">                        cout&lt;&lt;mn[i]&lt;&lt;<span class="string">&#x27; &#x27;</span>;</span><br><span class="line">                        <span class="keyword">if</span> (i&lt;a) &#123;</span><br><span class="line">                            cout&lt;&lt;ma[i]&lt;&lt;<span class="string">&#x27; &#x27;</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                    cout&lt;&lt;n<span class="number">-1</span>&lt;&lt;endl;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span> (a==b) &#123;</span><br><span class="line">                    state[<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line">                    state[n]=<span class="number">1</span>;</span><br><span class="line">                    <span class="keyword">int</span> temp=n<span class="number">-1</span>;</span><br><span class="line">                    <span class="keyword">int</span> temp2=<span class="number">2</span>;</span><br><span class="line">                    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;a; i++) &#123;</span><br><span class="line">                        ma[i]=temp;</span><br><span class="line">                        state[temp--]=<span class="number">1</span>;</span><br><span class="line">                        mn[i]=temp2;</span><br><span class="line">                        state[temp2++]=<span class="number">1</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    cout&lt;&lt;n&lt;&lt;<span class="string">&#x27; &#x27;</span>;</span><br><span class="line">                    <span class="keyword">for</span> (<span class="keyword">int</span> i=n<span class="number">-1</span>; i&gt;=<span class="number">1</span>; i--) &#123;</span><br><span class="line">                        <span class="keyword">if</span> (!state[i]) &#123;</span><br><span class="line">                            cout&lt;&lt;i&lt;&lt;<span class="string">&#x27; &#x27;</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;a; i++) &#123;</span><br><span class="line">                        cout&lt;&lt;mn[i]&lt;&lt;<span class="string">&#x27; &#x27;</span>;</span><br><span class="line">                        cout&lt;&lt;ma[i]&lt;&lt;<span class="string">&#x27; &#x27;</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    cout&lt;&lt;<span class="number">1</span>&lt;&lt;endl;</span><br><span class="line">                &#125;</span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="三"><a href="#三" class="headerlink" title="三"></a>三</h2><h4 id="题目来源：https-www-luogu-com-cn-problem-P1251"><a href="#题目来源：https-www-luogu-com-cn-problem-P1251" class="headerlink" title="题目来源：https://www.luogu.com.cn/problem/P1251"></a>题目来源：<a href="https://www.luogu.com.cn/problem/P1251">https://www.luogu.com.cn/problem/P1251</a></h4><p><img src="https://tva1.sinaimg.cn/large/008i3skNgy1gxb875ehqpj31890u0ae8.jpg"></p><p>这道题选择了一个贪心的策略，即一开始就买下一个适当数量的毛巾，以便以后去洗来用，对于慢洗和快洗的选择是，慢洗越早越好，快洗是在必须得快洗才能满足需求的时候才去选择快洗，并且越晚洗越好，让开销最小化。need数组存储当天用多少毛巾，wash数组存储当天能送洗多少。随着最初买的毛巾数量的变化，最小花销一定是位于极小值点上，所以可以看为一个开口向上的函数，用三分策略降低寻找最优方案的时间复杂度。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">1e5</span>+<span class="number">10</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> LL;</span><br><span class="line"><span class="keyword">const</span> LL inf=<span class="number">0xfffffffffffff</span>;</span><br><span class="line"><span class="keyword">int</span> need[N],wash[N],n;</span><br><span class="line">LL sum;</span><br><span class="line"><span class="keyword">int</span> p,t1,p1,t2,p2;</span><br><span class="line"><span class="function">LL <span class="title">llmin</span><span class="params">(LL x,LL y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> x&lt;y?x:y;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">LL <span class="title">minprice</span><span class="params">(LL firbuy)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(wash, <span class="number">0</span>, <span class="built_in"><span class="keyword">sizeof</span></span>(wash));</span><br><span class="line">    sum=p*firbuy;</span><br><span class="line">    LL rest=firbuy;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++) &#123;</span><br><span class="line">        <span class="keyword">int</span> today=need[i];</span><br><span class="line">        <span class="keyword">if</span> (rest) &#123;</span><br><span class="line">            <span class="keyword">int</span> k=(<span class="keyword">int</span>)<span class="built_in">llmin</span>(rest,today);</span><br><span class="line">            today-=k;</span><br><span class="line">            rest-=k;</span><br><span class="line">            wash[i]+=k;</span><br><span class="line">            <span class="keyword">if</span> (!today) &#123;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="number">1</span>; j&lt;=i-t1; j++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (wash[j]) &#123;</span><br><span class="line">                <span class="keyword">int</span> k=(<span class="keyword">int</span>)<span class="built_in">llmin</span>(wash[j],today);</span><br><span class="line">                today-=k;</span><br><span class="line">                wash[j]-=k;</span><br><span class="line">                wash[i]+=k;</span><br><span class="line">                sum+=p1*k;</span><br><span class="line">                <span class="keyword">if</span> (!today) &#123;</span><br><span class="line">                    <span class="keyword">break</span>;;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j=i-t2; j&gt;=<span class="number">1</span>&amp;&amp;j&gt;i-t1; j--) &#123;</span><br><span class="line">            <span class="keyword">if</span> (wash[j]) &#123;</span><br><span class="line">                <span class="keyword">int</span> k=(<span class="keyword">int</span>)<span class="built_in">llmin</span>(wash[j],today);</span><br><span class="line">                today-=k;</span><br><span class="line">                wash[j]-=k;</span><br><span class="line">                wash[i]+=k;</span><br><span class="line">                sum+=p2*k;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (!today) &#123;</span><br><span class="line">                <span class="keyword">break</span>;;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (today) &#123;</span><br><span class="line">            <span class="keyword">return</span> inf;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> sum;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    LL l,r=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++) &#123;</span><br><span class="line">        cin&gt;&gt;need[i];</span><br><span class="line">        r+=need[i];</span><br><span class="line">    &#125;</span><br><span class="line">    l=need[<span class="number">1</span>];</span><br><span class="line">    cin&gt;&gt;p&gt;&gt;t2&gt;&gt;p2&gt;&gt;t1&gt;&gt;p1;</span><br><span class="line">    <span class="keyword">while</span> (l+<span class="number">2</span>&lt;r) &#123;</span><br><span class="line">        LL k=(r-l)/<span class="number">3</span>,m1=l+k,m2=r-k;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">minprice</span>(m1)&lt;<span class="built_in">minprice</span>(m2)) &#123;</span><br><span class="line">            r=m2;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> l=m1;</span><br><span class="line">    &#125;</span><br><span class="line">    LL best=<span class="built_in">minprice</span>(l);</span><br><span class="line">    <span class="keyword">for</span> (LL i=l; i&lt;=r; i++) &#123;</span><br><span class="line">        best=<span class="built_in">llmin</span>(best,<span class="built_in">minprice</span>(i));</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;best;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="四"><a href="#四" class="headerlink" title="四"></a>四</h2><h4 id="题目来源：BZOJ3969"><a href="#题目来源：BZOJ3969" class="headerlink" title="题目来源：BZOJ3969"></a>题目来源：BZOJ3969</h4><p><img src="https://tva1.sinaimg.cn/large/008i3skNgy1gxb87waz0hj30ts0sqtbo.jpg"></p><p>上道题用到三分的策略，这道题可以直接用二分的策略，因为所有可能的取值是一个线性的函数。所以写一个检查函数，以检查输入的值是否符合条件，不断缩小搜素范围，找到最小值。检查之前先把电池的电量进行排序。检查函数的实现只需要判断可以找到n组电量之差小于所要检查的值，且比所选电池电量大的电池的数量应足够放下其他的位置（芯片中其他电量非最小的位置）</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">1e6</span>+<span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> n,k,sum,a[N];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">check</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> cnt=n;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;sum; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (a[i+<span class="number">1</span>]-a[i]&lt;=x) &#123;</span><br><span class="line">            <span class="keyword">if</span> (sum-i+<span class="number">1</span>&lt;<span class="number">2</span>*cnt*k) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            cnt--;</span><br><span class="line">            i++;</span><br><span class="line">            <span class="keyword">if</span> (cnt==<span class="number">0</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cin&gt;&gt;n&gt;&gt;k;</span><br><span class="line">    sum=<span class="number">2</span>*n*k;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=sum; i++) &#123;</span><br><span class="line">        cin&gt;&gt;a[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">sort</span>(a+<span class="number">1</span>,a+<span class="number">1</span>+sum);</span><br><span class="line">    <span class="keyword">int</span> l=a[<span class="number">2</span>]-a[<span class="number">1</span>],r=a[sum-k+<span class="number">1</span>],mid=<span class="number">0</span>;</span><br><span class="line">  </span><br><span class="line">    <span class="keyword">while</span> (l&lt;r) &#123;</span><br><span class="line">        mid=l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">check</span>(mid)) &#123;</span><br><span class="line">            r=mid;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> l=mid+<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;l;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="五"><a href="#五" class="headerlink" title="五"></a>五</h2><h4 id="题目来源：-https-www-acwing-com-problem-content-description-847"><a href="#题目来源：-https-www-acwing-com-problem-content-description-847" class="headerlink" title="题目来源： https://www.acwing.com/problem/content/description/847/"></a>题目来源： <a href="https://www.acwing.com/problem/content/description/847/">https://www.acwing.com/problem/content/description/847/</a></h4><p><img src="https://tva1.sinaimg.cn/large/008i3skNgy1gxb88o4jtdj310v0u0tbo.jpg"></p><p>这是一道宽搜的模版题，把当前数字的排列方式转换成字符串，表示当前的一个状态，同时用哈希表，string查找int的方式存储到达每个状态需要走几步，我们可以让空格和上下左右四个位置交换（在有效的前提下），直到出现符合要求的最终状态。这一位置交换操作用坐标来实现，即定义两个数组，存储(0,1)(0,-1)(1,0)(-1,0)这四种位置移动信息。因为过程是广度优先的（把要查询的状态入队，把该状态的下一步所有的可能状态都遍历一遍，并把它们也入队），所以最终的方案一定是最短的。代码如下</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;unordered_map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line">queue&lt;string&gt; q;</span><br><span class="line">unordered_map&lt;string, <span class="keyword">int</span>&gt; d;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">bfs</span><span class="params">(string start)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    string end=<span class="string">&quot;12345678x&quot;</span>;</span><br><span class="line">    d[start]=<span class="number">0</span>;</span><br><span class="line">    q.<span class="built_in">push</span>(start);</span><br><span class="line">    <span class="keyword">int</span> mx[<span class="number">4</span>]=&#123;<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">-1</span>&#125;,my[<span class="number">4</span>]=&#123;<span class="number">1</span>,<span class="number">-1</span>,<span class="number">0</span>,<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="keyword">while</span> (q.<span class="built_in">size</span>()) &#123;</span><br><span class="line">        string t=q.<span class="built_in">front</span>();</span><br><span class="line">        q.<span class="built_in">pop</span>();</span><br><span class="line">        <span class="keyword">if</span> (t==end) &#123;</span><br><span class="line">            <span class="keyword">return</span> d[t];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> distance=d[t];</span><br><span class="line">        <span class="keyword">int</span> k=(<span class="keyword">int</span>)t.<span class="built_in">find</span>(<span class="string">&#x27;x&#x27;</span>);</span><br><span class="line">        <span class="keyword">int</span> tx=k/<span class="number">3</span>,ty=k%<span class="number">3</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;<span class="number">4</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">int</span> x=tx+mx[i],y=ty+my[i];</span><br><span class="line">            <span class="keyword">if</span> (x&gt;=<span class="number">0</span>&amp;&amp;x&lt;<span class="number">3</span>&amp;&amp;y&gt;=<span class="number">0</span>&amp;&amp;y&lt;<span class="number">3</span>) &#123;</span><br><span class="line">                <span class="built_in">swap</span>(t[k],t[<span class="number">3</span>*x+y]);</span><br><span class="line">                <span class="keyword">if</span> (!d[t]) &#123;</span><br><span class="line">                    q.<span class="built_in">push</span>(t);</span><br><span class="line">                    d[t]=distance+<span class="number">1</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="built_in">swap</span>(t[k],t[<span class="number">3</span>*x+y]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    string start;</span><br><span class="line">    <span class="keyword">char</span> c;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;<span class="number">9</span>; i++) &#123;</span><br><span class="line">        cin&gt;&gt;c;</span><br><span class="line">        start+=c;</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;<span class="built_in">bfs</span>(start);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;LCX的算法笔记Week-1&quot;&gt;&lt;a href=&quot;#LCX的算法笔记Week-1&quot; class=&quot;headerlink&quot; title=&quot;LCX的算法笔记Week-1&quot;&gt;&lt;/a&gt;LCX的算法笔记Week-1&lt;/h1&gt;&lt;p&gt;详细记录一下一周里做的比较有意思的几道题&lt;/</summary>
      
    
    
    
    
    <category term="LCX的算法笔记" scheme="http://ruoshui66.github.io/tags/LCX%E7%9A%84%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>重剑无锋，大巧不工</title>
    <link href="http://ruoshui66.github.io/2021/12/12/%E9%87%8D%E5%89%91%E6%97%A0%E9%94%8B%EF%BC%8C%E5%A4%A7%E5%B7%A7%E4%B8%8D%E5%B7%A5/"/>
    <id>http://ruoshui66.github.io/2021/12/12/%E9%87%8D%E5%89%91%E6%97%A0%E9%94%8B%EF%BC%8C%E5%A4%A7%E5%B7%A7%E4%B8%8D%E5%B7%A5/</id>
    <published>2021-12-12T11:11:09.053Z</published>
    <updated>2021-12-13T05:28:38.100Z</updated>
    
    <content type="html"><![CDATA[<h1 id="重剑无锋，大巧不工"><a href="#重剑无锋，大巧不工" class="headerlink" title="重剑无锋，大巧不工"></a>重剑无锋，大巧不工</h1><p>学习的过程就是将知识由外向内转化的过程，最近在知乎上看到一个学习建议说到了我的心上。学完一部分知识点之后，忘掉之前自己具体学过哪些，去泛刷这一大类的题目，避免出现”我刚学了一个高级算法，这道题肯定是这个高级的算法”这样奇怪的思考。想来自己也确实陷入过这种困境，在学习完一个新的算法之后，下面做题的时候总是会有意无意地想到脑子里最新学来的那个算法，从而使思维不能够发散，眼界变的狭隘。这就是不能把外在知识而转化为内在，不能达到知识彻底为我所用的境界。想要克服只有不断地训练，由记得转化为有如本能一般，终能不受原来招式所限，随意出招自成章法。就像《倚天屠龙记》学习剑法那样</p><blockquote><p>“无忌，我教你的还记得多少？”</p><p>“回太师傅，我只记得一大半”</p><p>“那，现在呢？己经剩下一小半了”</p><p>“那，现在呢？”“我已经把所有的全忘记了！”</p><p>“好，你可以上了</p></blockquote><p>抑或是像风清扬说的那样</p><blockquote><p>“学招时要活学，使招时要活使。</p><p>倘若拘泥不化，便练熟了几千万手绝招</p><p>遇上了真正高手，终究还是给人家破得干干净净。”</p></blockquote><p>愿自己能勤学勤练，在学习算法这条路上能越走越远</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;重剑无锋，大巧不工&quot;&gt;&lt;a href=&quot;#重剑无锋，大巧不工&quot; class=&quot;headerlink&quot; title=&quot;重剑无锋，大巧不工&quot;&gt;&lt;/a&gt;重剑无锋，大巧不工&lt;/h1&gt;&lt;p&gt;学习的过程就是将知识由外向内转化的过程，最近在知乎上看到一个学习建议说到了我的心上。</summary>
      
    
    
    
    
    <category term="感悟" scheme="http://ruoshui66.github.io/tags/%E6%84%9F%E6%82%9F/"/>
    
  </entry>
  
  <entry>
    <title>开篇</title>
    <link href="http://ruoshui66.github.io/2021/12/04/%E5%BC%80%E7%AF%87/"/>
    <id>http://ruoshui66.github.io/2021/12/04/%E5%BC%80%E7%AF%87/</id>
    <published>2021-12-04T15:18:31.000Z</published>
    <updated>2021-12-13T05:28:16.962Z</updated>
    
    <content type="html"><![CDATA[<h1 id="开篇"><a href="#开篇" class="headerlink" title="开篇"></a>开篇</h1><p>​        花了一天的时间，终于把网站给搭好了，中间虽然也遇到了一些问题，但不断检索解决问题的过程还是比较有趣的。从<strong>0</strong>到<strong>1</strong>地建立起自己的网站所获得内心的充实让我感觉时间没有白费。后续会在网站上加入更多的东西，作为网站建立的第一篇博客，不知道要写什么。本篇文章没有主题，仅仅记录一下最近对我触动比较深的想法。</p><h3 id="1-人生苦短，记录下来"><a href="#1-人生苦短，记录下来" class="headerlink" title="1.人生苦短，记录下来"></a>1.人生苦短，记录下来</h3><p>​     <strong>熵增定律告诉我们事物总是自发地，不可逆地朝着熵增加即混乱的方向进行。天地不仁，以万物为刍狗。宇宙在时间的尽头归于寂灭，人体在有限的时间限度里也会走向灭亡。人生短暂，我们需要记录，记录属于自己的时刻。按下快门，捕捉眼前看到的世界。关于日出，关于日落。正如那句歌词一样</strong></p><blockquote><p><strong>“别错过日落和夕阳，不论在哪里呀”。</strong></p></blockquote><p><strong>打开备忘录，用文字书写内心的感受。记下生活中的发光时刻便是我们在有限的人生范围内所能找到的最优解。这也是我建本网站的原因，记录所学，记录所感。</strong></p><h3 id="2-关于人生"><a href="#2-关于人生" class="headerlink" title="2.关于人生"></a>2.关于人生</h3><p>​       <strong>我有时候总是会想，人这一生，该怎么去度过。上周末我看了《死亡诗社》这部电影，里面的老师说的一句话让我印象深刻。</strong></p><blockquote><p><strong>“我步入丛林 因为我希望生活得有意义 我希望活得深刻 吸取生命中所有的精华 把非生命的一切都击溃 以免当我生命终结 发现自己从没有活过”</strong></p></blockquote><p><strong>去珍惜生命中珍贵的东西，别被繁杂琐事牵走自己的注意力。 纵然生活中总是有很多我们所不能左右的事情，恼人的各类报告，部分无趣的必修课程，但还是要戴着镣铐起舞，尽最大可能地把时间用在自己所喜欢的事情上，做能让自己感到充实和快乐的事情，才能真正地活得深刻。去追逐热爱吧，在正反馈中不断成长。去想去的地方，看看那里吧。祝我们的以后都盛景花开。</strong></p><p>​        <del>这学期课太多了，平时事情比较多，以后尽可能地多更新，希望自己不要忘记建立网站的初衷。</del></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;开篇&quot;&gt;&lt;a href=&quot;#开篇&quot; class=&quot;headerlink&quot; title=&quot;开篇&quot;&gt;&lt;/a&gt;开篇&lt;/h1&gt;&lt;p&gt;​        花了一天的时间，终于把网站给搭好了，中间虽然也遇到了一些问题，但不断检索解决问题的过程还是比较有趣的。从&lt;strong&gt;0</summary>
      
    
    
    
    
    <category term="感悟" scheme="http://ruoshui66.github.io/tags/%E6%84%9F%E6%82%9F/"/>
    
  </entry>
  
</feed>
